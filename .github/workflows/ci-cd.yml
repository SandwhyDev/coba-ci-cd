name: coba app

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm i

      - name: Build
        run: npm run build

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.IMAGE_NAME }}:v2 .
          docker push ${{ secrets.IMAGE_NAME }}:v2

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Test SSH Connection
        run: ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pull Latest Docker Image
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull ${{ secrets.IMAGE_NAME }}:v2"

      - name: Stop and Remove Old Container (If Exists)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          if [ \$(docker ps -q -f name=my-coba-app) ]; then
            echo 'Stopping and removing old container...'
            docker stop my-coba-app && docker rm my-coba-app
          else
            echo 'No existing container found. Skipping stop and remove.'
          fi
          "

      - name: Run New Container
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run -d --name my-coba-app -p 9000:9000 ${{ secrets.IMAGE_NAME }}:v2"

      - name: Prune Unused Docker Images
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker image prune -f"
